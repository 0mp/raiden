- hosts: localhost
  name: init
  connection: local
  gather_facts: False
  vars:
    count: 1
  roles: 
    - tester
  tags:
    - init

  tasks:
    - name: Provision a set of instances
      local_action:
        module: ec2
        # this allows to refer to them later via 'hosts: key_raiden'
        key_name: raiden
        region: "{{ region }}"
        group: raiden
        instance_type: "{{ instance_type }}" 
        image: "{{ ami_id }}"
        wait: true
        count: "{{ count }}"
        instance_tags:
          Name: Demo
      register: ec2

    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=ec2hosts
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
      with_items: "{{ ec2.instances }}"
    # this will update the dynamic inventory; necessary whenever we create instances
    - meta: refresh_inventory

- hosts: key_raiden
  name: configuration play
  remote_user: "{{ remote_user }}"
  gather_facts: true
  tags:
    - configure

  tasks:
    - meta: refresh_inventory
    - name: call 'date'
      shell: cmd=date

    - name: add ethereum ppa
      apt_repository: repo=ppa:ethereum/ethereum validate_certs=no

    - name: install geth, solc
      apt: name="{{ item }}"
      with_items:
        - geth
        - solc

- hosts: key_raiden
  name: terminate
  remote_user: "{{ remote_user }}"
  gather_facts: False
  roles:
    - tester
  tags:
    - terminate

  tasks:
    # Collect instance id: http://stackoverflow.com/a/27307254 
    - action: ec2_facts
    - name: shutdown all ec2.instances
      local_action:
        module: ec2
        region: "{{ region }}"
        state: absent
        instance_ids: "{{ ansible_ec2_instance_id }}"
