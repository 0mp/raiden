[tox]
envlist = coverage

[pytest]
timeout = 540
norecursedirs = node_modules

[testenv]
deps =
    -rrequirements-dev.txt
commands =
    coverage erase
    pytest --cov-append --exitfirst {posargs:./raiden/tests/unit ./raiden/tests/integration/api ./raiden/tests/integration}

[testenv:flake8]
deps =
    flake8
commands=
    flake8  --exit-zero raiden/ tools/

; ob-review
; This is not what I understand as a development environment.
; This is running tests against the development install
; so I would name this differently (e.g. py27_devtests)
; and have a "real devenv also"
; see https://tox.readthedocs.io/en/latest/example/devenv.html
[testenv:devenv]
envdir = devenv
basepython = python2.7
usedevelop = True
deps =
    -rrequirements-dev.txt
commands = pytest --cov-append --exitfirst {posargs:./raiden/}

[testenv:integration]
commands = pytest --cov-append --initial-port=3000 --exitfirst ./raiden/tests/integration {posargs}

[testenv:unit]
commands = pytest --cov-append --initial-port=4000 --exitfirst ./raiden/tests/unit {posargs}

[testenv:api]
commands = pytest --cov-append --initial-port=5000 --exitfirst ./raiden/tests/integration/api {posargs}

; ob-review
; I would suggest something like this as a "real" development environment
; it should be seen as a throwaway so shouldn't even live outside of .tox
; it should install everything python specific needed for development
; maybe it could also contain a hint where to find instructions for installing
; non Python prerequisites
[testenv:dev]
description = create development environment at {envdir}
basepython = python3.6
usedevelop = True
deps =
    -r requirements-dev.txt
    -c constraints.txt
commands =
    {toxinidir}/tools/install_synapse.sh
    python -c "print('dev env installed at {envdir}')"
